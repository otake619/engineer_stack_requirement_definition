Why：システム開発の目的（要望）
→エンジニア(未経験含む)が自身の学習ログとして活用でき、また転職の際に
そのログを採用担当者へと公開することでポートフォリオに並ぶ自身の
熱意や到達度を示す証拠として活用するためのアプリを作成したい。
機能はできるだけシンプルにして使いやすくする。
ログをエクセルなどの表計算形式のファイルに出力出来るようにする。

現状の課題
ゴール（本来あるべき状態）
→本アプリのゴールとは逸れるが、本アプリを運用することでの私自身の
目標は
・1円でもいいから収益化する
・自身とは無関係の客を1人でもいいから獲得する

何故この目標設定であるか？
→顧客を獲得し、その上で1円でも収益化出来てしまえば、私自身のエンジニア転職
の際に自身のそれまで積み上げてきたものに対する強力な証明となるため。

本アプリ作成前の私自身の課題(困りごと)
→アプリ開発の勉強をするうえで、躓いたポイントがあったとしても記録を
つけていないので忘れてしまう。忘れてしまうため、再び同じポイントで
躓くことになる。
また、昨今のエンジニア転職の際にはポートフォリオを提出するのが
当然の流れになっているがポートフォリオだけよりかは自身がどんなポイントで
躓いているかやどれくらい今まで学習してきたのか可視化できたほうが企業に
対してのアピールにつながり、またつまづきレベルを採用担当が知ることで
ミスマッチをなくすことにも繋がると思われる。

現状とゴールのギャップ（解決すべき課題）
→ログをエクセルで貯めているが、正直みづらい。
WEBエンジニア転職に特化したメモアプリはおそらく存在しない。

What：どのように課題を解決するのか
→シンプルなUIで学習ログを貯められてログを閲覧しやすいアプリを作成する。
本アプリに採用担当用の管理画面を作成することで、自身のログを共有すること
を可能とする。ログを共有することで、使用者の熱意や到達度をチェックできる。

機能要件
・つまづきポイントをデータベースに保存する機能
・思考プロセスをデータベースに保存する機能
・解決策をデータベースに保存する機能
・参考サイトをデータベースに保存する機能
・自由コメントをデータベースに保存する機能
・データベースへの保存が成功したらポップアップ表示する機能
・ログに保存する上記の要素を組み合わせて入力できるようにする機能
・認証系(アカウント作成・ログイン・ログアウト・アカウント削除など)
・カレンダーのUIから過去のログを検索できる機能
・カレンダーのUIにログがあった日はその日のマス目の色を変える機能
・ログの閲覧機能
・ログの更新機能
・ログの削除機能
・採用担当者用のログ閲覧機能
・採用担当者用の管理画面での認証パスワード発行機能 - 認証パスワードは
指定ユーザーのメールアドレスとセットで入力することで指定ユーザーの
ログを閲覧できるようにする。閲覧以外は不可能。ログ閲覧以外の
ページに飛ぼうとすると強制的に元のページにリダイレクトするようにする。

非機能要件
→

----------------------------------------------------------------
※以下、IPAによる非機能要件の例

①可用性	システムの継続利用	・障害や災害時における稼働目標
②性能・拡張性	システム性能、将来の拡張	・画面レスポンス
・データ増加
③運用・保守性	運用と保守のサービス	・稼働時間
・データバックアップ
・システム監視
・計画停止
・サポート体制
④移行性	現行システムからの移行	・移行スケジュール
・移行方法
・移行データ
⑤セキュリティ	セキュリティの確保	・認証機能（ログインなど）
・機能制限
・データの暗号化
⑥環境・エコロジー	設置環境や規格	耐震や温度、湿度、騒音など
----------------------------------------------------------------

セキュリティなど
→SQLインジェクションやXSS対策、クロスサイトリクエストフォージェリ対策など。


How：具体的な使い勝手と実装方法（システム設計に近いタスク）
基本設計
→

画面設計（UI設計）
→別ファイルの"画面遷移図.drawio"を参照

機能設計
→

データ設計
→

詳細設計
→

クラス図、シーケンス図
→別ファイルの"テーブル定義書.drawio"を参照

システムアーキテクチャ
→

各部位を実装する技術
→